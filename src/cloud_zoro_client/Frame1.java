/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frame1.java
 *
 * Created on 23-Feb-2013, 10:21:57
 */

package cloud_zoro_client;

import java.awt.FileDialog;
import javax.swing.JOptionPane;
import java.io.*;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rolden
 */
public class Frame1 extends javax.swing.JFrame implements Constants {
  

    Thread Client_Thread,Request_Thread;
    RequestFetchThread RequestObject;
    ClientFetchThread ClientObject;
    String Filename_To_Cut;
    static DefaultTableModel Connection_Table_Model;
    static DefaultTableModel Request_Table_Model;
    String[] connection_colhead ={"Project ID","Registration ID"};
    String[] Request_colhead ={"Registration ID","Email Address","Filename"};
    String[][] Column_Values=null;
    /** Creates new form Frame1 */
    public Frame1() {
        Connection_Table_Model=new DefaultTableModel(connection_colhead,0);
        Request_Table_Model=new DefaultTableModel(Request_colhead,0);
        
      
        initComponents();
          jTable2.setModel(Request_Table_Model);
        jTable1.setModel(Connection_Table_Model);

         try {
             UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this); //=====> Repaint the whole Frame !!!!!!!
      } catch (Exception e) {
        System.err.println("Unable to change");
      }

        RequestObject=new RequestFetchThread();
        ClientObject=new ClientFetchThread();
        Client_Thread=new Thread(ClientObject);
        Client_Thread.start();
        Request_Thread=new Thread(RequestObject);
        Request_Thread.start();

    }

    
    String fname,dname;
   // String email_id,filename,cloud_reg_id;
    String defaultFolder= "C:/CloudZoro/";

    boolean dir= new File(defaultFolder).mkdirs();



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 153));
        setForeground(java.awt.Color.red);

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));

        jLabel2.setFont(new java.awt.Font("CyrillicGoth", 0, 30));
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("CloudZoro Mail Server");

        jTabbedPane1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N

        jTable1.setBackground(new java.awt.Color(255, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Program ID", "Registration ID"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Clients Connected", jScrollPane1);

        jTable2.setBackground(new java.awt.Color(255, 255, 204));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Registration ID", "Email ID", "Filename"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTabbedPane1.addTab("File Request", jScrollPane2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("Select File To Cut");

        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });

        btn1.setText("Browse");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("Split and Generate Metadata ");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn1)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn1))
                .addGap(40, 40, 40)
                .addComponent(btn2)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("File Cutter", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
    FileDialog f= new FileDialog(this);
    f.show();
    dname=f.getDirectory();
    fname=f.getFile();
    txt1.setText(dname+fname);

    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        
         if(txt1.equals(""))
    {
        JOptionPane.showMessageDialog(this,"Select One File To Split");
    }
    else
    {
                File cutter_path=new File(FILE_CUTTER_PATH);
                if(!cutter_path.exists())
                {
                   cutter_path.mkdir();
                }
              
     //   aes.generateAESKey();
        File f=new File(txt1.getText());
        if(f.isDirectory())
        {
            JOptionPane.showMessageDialog(this,"Cannot Split a Directory");
        }
        else
        {
try
        {

        FileInputStream fis=new FileInputStream(f);
        File meta=new File(defaultFolder+fname+".cloudzoro");
        meta.createNewFile();
        FileWriter fw=new FileWriter(meta);
        fw.write("#cloudzoro\n"+CLOUD_PROJECT_NUMBER+"\n"+f.getName());
        int size=fis.available();
        int pieces=size/1000000;
        fw.write("\n"+(pieces+1));
        byte[] b=new byte[1000000];
        int i;
        for(i=1;i<=pieces;i++) //All the pieces of 1mb each
        {
        fis.read(b,0,1000000);
        File f1=new File(defaultFolder+fname+i);
        f1.createNewFile();
        fw.write("\n"+f1.getName());
        FileOutputStream fos=new FileOutputStream(f1);
        fos.write(b);
        fos.close();
            }
        if(fis.available()>0) // files that are not an exact multiple of 1024
        {
        byte[] b1=new byte[fis.available()];
        fis.read(b1,0,fis.available());
        File f1=new File(defaultFolder+fname+i);
        f1.createNewFile();
        fw.write("\n"+f1.getName());
        FileOutputStream fos=new FileOutputStream(f1);
        fos.write(b1);
        fos.close();
            }
        else //for files that are an exact multiple of 1024
        { 
        byte[] b1=new byte[0];
        fis.read(b1,0,0);
        File f1=new File(defaultFolder+fname+i);
        f1.createNewFile();
        fw.write("\n"+f1.getName());
        FileOutputStream fos=new FileOutputStream(f1);
        fos.write(b1);
        fos.close();
        }
        
        fw.close();
        fis.close();
        JOptionPane.showMessageDialog(this,"Data Stored in "+defaultFolder);


        }
        catch(Exception e)
        {
              System.out.println(e.getLocalizedMessage());
        }
        }
        

    } 
    }//GEN-LAST:event_btn2ActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
      

    }//GEN-LAST:event_txt1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame1().setVisible(true);

            }
        });
    }
public static javax.swing.JTable mainframe_table_connection;
    public static javax.swing.JTable mainframe_table_request;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn1;
    public javax.swing.JButton btn2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable2;
    public javax.swing.JTextField txt1;
    // End of variables declaration//GEN-END:variables

}
